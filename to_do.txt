1. Сделать звуки
2. Сделать сетевую игру
3. Сделать меню
4. Сделать логику игры
 4.1 Рассмотреть варианты как сделать board, pawn, location менее затратными по времени и памяти
 4.2 Подумать, хорошо ли иметь в классе board штуку для учёта срубленных пешек и какие могут быть альтернативы
 4.3 Подумать, нужен ли класс для внесения временных изменений в игру, в том числе если она константная.
    (может быть полезно для showMovePawnActions)
 4.4 Возможно, обратить порядок экшенов в TakeLocation и PenShift если п. 4.1 будет сделан (зачем?)
 4.5 Добавить try-catch в Game::moveAction на случай, если pawnIndex корявый?
  4.5.1 Проверять также, что captorPlayer < 0 в ransomAction итп?
 +4.6                                                                                               ТАКЖЕ КАСАЕТСЯ ВИДЖЕТА. Заменить команды XXXAction одной командой createAction(Command c)
 +4.7                                                                                               Заюзать юнион кодов результата и в самом классе game тоже (а не только в виджете)
5. Сделать основной интерфейс игры
 5.1 Убрать QGraphicsView из наследования GameWidget и переместить в приват?
 5.2 Переместить цвета и всякие константы из gameWidget.cpp в gameWidget.h и gameWidget_p.h
 5.3 Разобраться с Z-уровнями (что именно?)
 5.4 Переместить свойства, общие для всех Item-ов, в соответствующие ItemCommonProps-ы
 5.5 Доделать отображение домов и пленов
  5.5.1 Отступы в пленах (и домах?)
  5.5.2 Сделать так, чтобы отступы уменьшались, если пешек в плену слишком много
 5.6 Разобраться с подсветкой и стрелками
  5.6.1 Ещё раз продумать логику
  5.6.2 Переместить всю логику подсветки и стрелок в actionMarkingVisitor
  5.6.3 Решить, всегда ли отображать подсветку усталых пешек
 5.7 Ещё раз продумать анимацию
 5.8 Добавить возможность блокировки ввода мышкой
 5.9 Сделать кубики
 5.10 Продумать взаимодействие геймВиджета с компьютером и сетевыми игроками (здесь п. 5.8 как раз кстати)
 5.11 Сделать загрузку вида интерфейса из файла
 5.12 Кэшировать availableCommands?
 5.13 Посылать фейковый ивент mouseMove, когда анимация заканчивается? Или как-то иначе добиться нужного результата?
 5.14 Создать все стрелки и маркеры один раз и просто делать видимыми/невидимыми при наведении
      мышкой на фишки вместо постоянного вызова экшншоувизиторов.
 5.15 Уменьшить дублирование кода (в частности, showMovePawnActions и showBirthActions (а ещё что?))
  5.15.1 Кусок кода, начинающийся с "action->accept(bornPawnSearchVisitor)" - встречается два раза и почти одинаков
6. Сделать ИИ
 6.1 ООПизировать
 6.2 Сделать clearDistanceAhead o(1) или избавиться от повторных его вызовов
 6.3 Сделать сложного компа
 6.4 Параметризовать на разные размеры доски, переходы, число сторон кубика?
 6.5 Параметризовать playerScore и найти оптимальные параметры (обучением)
7. Общее
 7.1 Разобраться с примитивными типами во всём проекте (int, unsigned int, size_t), избавиться от предупреждений о narrowing и прочем
